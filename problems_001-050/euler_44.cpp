/*
PROBLEM:
  Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers
  are:

          1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

  It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not
  pentagonal.

  Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
  and D = |Pk − Pj| is minimised; what is the value of D?


SOLUTION:
  We can solve this prblem by utilizing the solution of the quadratic equation in real number.

  ANSWER: 5482660
**/

#include "iostream"
#include "math.h"


bool inverse_pentagonal_number(unsigned int &n)
{
  double d = (1.0 + sqrt(1.0 + 24.0 * (double)n)) / 6.0;
  if (d == floor(d)) {
    n = (unsigned int)d;
    return true;
  }
  else
    return false;
}


unsigned int pentagonal_number(unsigned int n)
{
  n *= (3 * n - 1);
  n /= 2;
  return n;
}


int main()
{
  // // Check the example:
  // std::cout << pentagonal_number(7) << " , " << pentagonal_number(4) << std::endl;
  // unsigned int sum = pentagonal_number(7)+pentagonal_number(4);
  // std::cout << inverse_pentagonal_number(sum) << "\t" << sum << std::endl;

  unsigned int sum,diff;
  unsigned int n = 1;
  unsigned int m = 1;
  while (true){
    if (m % 2 == 0)
      n = 2;
    else
      n = 1;
    while (n < m) {
      //std::cout << (m+n)/2 << ", " << (m-n)/2 << std::endl;
      sum = pentagonal_number( (m+n)/2 ) + pentagonal_number( (m-n)/2 );
      if (inverse_pentagonal_number(sum)) {
        diff = pentagonal_number( (m+n)/2 ) - pentagonal_number( (m-n)/2 );
        if (inverse_pentagonal_number(diff)) {
          std::cout << (m + n) / 2 << " , " << (m - n) / 2 << "\tO_sum: " << sum << ", O_diff: " << diff << std::endl;
          std::cout << "\tSum:  " <<  pentagonal_number(sum)  << std::endl;
          std::cout << "\tDiff: " <<  pentagonal_number(diff) << std::endl; 
          return 0;
        }
      }
      n += 2;
    }
    m += 1;
  }
  
  return 0;      
}
